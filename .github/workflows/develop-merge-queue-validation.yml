name: 'PR Validate Deploy'
on:
  workflow_call:
    inputs:
      environment:
        description: Environment
        type: string
        required: true
      should_deploy_or_validate:
        description: Specifies the workflow behavior (validate or deploy)
        required: true
        type: string

  pull_request:
    branches:
      - devops

jobs:
  get-changed-modules:

    outputs:
      changed_modules: ${{ steps.detect_changes.outputs.changed_modules }}
      base_branch: ${{ steps.set_base_branch.outputs.base_branch }}
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set base branch
        id: set_base_branch
        env:
          REF: ${{ github.base_ref || github.event.merge_group.base_ref }}
        run: |
          echo "ENV: ${{ inputs.environment }}"
          if [[ $REF == refs/heads/* ]]; then
            base_branch=$(echo $REF | awk -F'/' '{print $3}')
          else
            base_branch=$REF
          fi
          echo "Base branch set to: $base_branch"
          echo "base_branch=$base_branch" >> $GITHUB_OUTPUT

      - name: Get Changed Packages
        env:
          BASE_BRANCH: ${{ steps.set_base_branch.outputs.base_branch }}
        id: detect_changes
        run: |
          echo "chore/update-devops"
          echo "Base branch set to: $BASE_BRANCH"

  validate-qa:
    name: Validate ${{ inputs.environment }}
    needs:
      - get-changed-modules
    uses: ./.github/workflows/validate-manual.yml
    with:
      environment: ${{ inputs.environment }}
      modules_to_validate: ${{ needs.get-changed-modules.outputs.changed_modules }}
      base_ref: origin/${{ github.base_ref }}
    secrets: inherit

  merge_status:
    name: Merge status
    runs-on: ubuntu-latest
    needs:
      - validate-qa
    if: always()
    steps:
      - name: Check ${{ inputs.should_deploy_or_validate }} job
        run: |
          echo "${{ inputs.environment }}"
          if [[ "${{ needs.validate-qa.result }}" == "failure" || "${{ needs.validate-qa.result }}" == "cancelled" ]]; then
            echo "${{ inputs.environment }} validation was failed"
            exit 1
          fi

  assign_reviewers:
    name: Assign reviewers
    needs:
      - merge_status
    if: always()
    uses: ./.github/workflows/auto-reviewers-assignment.yml
    with:
      pr_result: ${{ needs.merge_status.result }}
    secrets: inherit
